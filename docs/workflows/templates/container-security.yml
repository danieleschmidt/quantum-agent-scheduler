name: Container Security

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - '.devcontainer/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - '.devcontainer/**'
  schedule:
    - cron: '0 3 * * 2'  # Weekly on Tuesday

jobs:
  dockerfile-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Lint Dockerfile with Hadolint
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        config: .hadolint.yaml
        format: sarif
        output-file: hadolint-results.sarif
        no-fail: false
        
    - name: Upload Hadolint scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: hadolint-results.sarif

  container-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build image for scanning
      run: |
        docker build -t local/quantum-agent-scheduler:scan .
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'local/quantum-agent-scheduler:scan'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Run Grype vulnerability scanner
      uses: anchore/scan-action@v3
      id: grype-scan
      with:
        image: "local/quantum-agent-scheduler:scan"
        fail-build: false
        severity-cutoff: high
        
    - name: Upload Grype scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: ${{ steps.grype-scan.outputs.sarif }}

  secrets-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  supply-chain-security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate SLSA provenance
      uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.9.0
      with:
        image: quantum-agent-scheduler
        digest: ${{ steps.build.outputs.digest }}
        registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
        registry-password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Generate SBOM with Syft
      uses: anchore/sbom-action@v0
      with:
        image: quantum-agent-scheduler:latest
        format: spdx-json
        output-file: sbom.spdx.json
        
    - name: Upload SBOM artifact
      uses: actions/upload-artifact@v3
      with:
        name: container-sbom
        path: sbom.spdx.json

  base-image-updates:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for base image updates
      run: |
        # Extract base image from Dockerfile
        BASE_IMAGE=$(grep "^FROM" Dockerfile | head -1 | awk '{print $2}')
        echo "Current base image: $BASE_IMAGE"
        
        # Check for newer versions (simplified check)
        if [[ $BASE_IMAGE == *"python"* ]]; then
          echo "::notice::Consider checking for newer Python base image versions"
        fi
        
    - name: Create issue for outdated base images
      if: github.event_name == 'schedule'
      uses: imjohnbo/issue-bot@v3
      with:
        assignees: "security-team"
        labels: "security,dependencies,automated"
        title: "Weekly: Check for base image updates"
        body: |
          This is an automated reminder to check for updates to our container base images.
          
          Please review:
          - Python base image versions
          - Security patches for base OS
          - Quantum computing framework base images
          
          This issue was automatically created by the container security workflow.
        token: ${{ secrets.GITHUB_TOKEN }}