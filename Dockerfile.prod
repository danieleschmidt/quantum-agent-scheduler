# Multi-stage production Dockerfile for Quantum Scheduler
FROM python:3.11-slim as builder

# Set build arguments
ARG BUILD_DATE
ARG VERSION
ARG VCS_REF

# Set labels
LABEL org.opencontainers.image.created=$BUILD_DATE \
      org.opencontainers.image.title="Quantum Scheduler" \
      org.opencontainers.image.description="Production-ready quantum-classical hybrid task scheduler" \
      org.opencontainers.image.version=$VERSION \
      org.opencontainers.image.revision=$VCS_REF \
      org.opencontainers.image.vendor="Terragon Labs" \
      org.opencontainers.image.licenses="MIT"

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /build

# Install Poetry
RUN pip install --no-cache-dir poetry==1.6.1

# Copy dependency files
COPY pyproject.toml poetry.lock ./

# Configure Poetry for production
RUN poetry config virtualenvs.create false \
    && poetry config virtualenvs.in-project false \
    && poetry config cache-dir /tmp/poetry-cache

# Install dependencies
RUN poetry install --only=main --no-dev --no-root \
    && rm -rf /tmp/poetry-cache

# Production stage
FROM python:3.11-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get clean

# Create non-root user
RUN groupadd -r quantum && useradd -r -g quantum -s /bin/bash quantum

# Set work directory
WORKDIR /app

# Copy Python environment from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY src/ ./src/
COPY scripts/ ./scripts/
COPY README.md LICENSE ./

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/temp \
    && chown -R quantum:quantum /app

# Copy entrypoint script
COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Switch to non-root user
USER quantum

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Set default environment variables
ENV PYTHONPATH=/app/src \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    QUANTUM_SCHEDULER_ENV=production \
    QUANTUM_SCHEDULER_LOG_LEVEL=info \
    QUANTUM_SCHEDULER_MAX_WORKERS=4 \
    QUANTUM_SCHEDULER_ENABLE_METRICS=true \
    QUANTUM_SCHEDULER_CACHE_SIZE=1000

# Entry point
ENTRYPOINT ["/entrypoint.sh"]
CMD ["api"]