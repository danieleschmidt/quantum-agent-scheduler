version: '3.8'

services:
  # Development environment
  quantum-scheduler-dev:
    build:
      context: .
      target: development
    container_name: quantum-scheduler-dev
    volumes:
      - .:/app
      - quantum-cache:/app/.cache
    ports:
      - "8000:8000"
      - "8888:8888"  # Jupyter Lab
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - QUANTUM_ENABLED=false
    command: poetry run uvicorn quantum_scheduler.api:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - quantum-net

  # Production environment
  quantum-scheduler-prod:
    build:
      context: .
      target: production
    container_name: quantum-scheduler-prod
    ports:
      - "8001:8000"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - QUANTUM_ENABLED=true
      - FALLBACK_TO_CLASSICAL=true
    depends_on:
      - redis
      - postgres
    networks:
      - quantum-net
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  # Redis for job queue and caching
  redis:
    image: redis:7-alpine
    container_name: quantum-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - quantum-net
    command: redis-server --appendonly yes

  # PostgreSQL for job persistence
  postgres:
    image: postgres:15-alpine
    container_name: quantum-postgres
    environment:
      POSTGRES_DB: quantum_scheduler
      POSTGRES_USER: scheduler
      POSTGRES_PASSWORD: scheduler_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - quantum-net

  # Jupyter Lab for quantum experimentation
  jupyter:
    build:
      context: .
      target: development
    container_name: quantum-jupyter
    ports:
      - "8888:8888"
    volumes:
      - .:/app
      - jupyter-data:/root/.jupyter
    environment:
      - JUPYTER_ENABLE_LAB=yes
    command: poetry run jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --notebook-dir=/app
    networks:
      - quantum-net

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: quantum-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - quantum-net

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: quantum-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - quantum-net

volumes:
  quantum-cache:
  redis-data:
  postgres-data:
  jupyter-data:
  prometheus-data:
  grafana-data:

networks:
  quantum-net:
    driver: bridge